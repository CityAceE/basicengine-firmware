TARGET = basic.sdl
OBJDIR = build_sdl

all: $(TARGET)

include common.mk

SOURCES = $(COMMON_SOURCES) $(shell ls sdl/*.cpp)

SOURCES_C = $(COMMON_SOURCES_C) libraries/tinycc/lib/va_list.c

OBJS = $(SOURCES:.cpp=.o) $(SOURCES_C:.c=.o)
OUT_OBJS = $(addprefix $(OBJDIR)/, $(OBJS))

LIBS = -lstdc++ `sdl-config --libs` -L$(OBJDIR)/dyncall/dyncall -ldyncall_s -lm

CROSS_COMPILE=
CC=$(CROSS_COMPILE)gcc
CXX=$(CROSS_COMPILE)g++

INCLUDE = $(COMMON_INCLUDE)
ARDFLAGS = $(COMMON_ARDFLAGS) -MMD -funroll-loops -fomit-frame-pointer -Isdl \
	   -DSDL -DDISABLE_NEON `sdl-config --cflags`

CFLAGS += $(ARDFLAGS) -Wno-pointer-sign
#CFLAGS += -m32
#CFLAGS += -fprofile-arcs -ftest-coverage
#CFLAGS += -fsanitize=undefined -fsanitize-address-use-after-scope
CXXFLAGS += $(ARDFLAGS) -fpermissive -std=c++11 -fno-exceptions

$(TARGET): $(OUT_OBJS) $(OBJDIR)/dyncall/dyncall/libdyncall_s.a
	$(CXX) $(CFLAGS) -o $(TARGET) $(OUT_OBJS) $(LIBS)

clean:
	rm -fr build_sdl
	@rm -f $(PROF)
	$(MAKE) -C ttbasic -f autogen.mk autogen_clean

-include $(OUT_OBJS:%.o=%.d)
